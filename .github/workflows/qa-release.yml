name: QA Deploy

on:
  push:
    branches:
      - 'master' # only for testing. Needs to be removed before PR
      - 'rc'
  workflow_dispatch:
    inputs: {}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Api
            base_path: .
          - name: Admin
            base_path: .
            gulp: true
          - name: Billing
            base_path: .
          - name: Events
            base_path: .
          - name: Notifications
            base_path: .
          - name: Sso
            base_path: ./bitwarden_license
            gulp: true
          - name: Portal
            base_path: ./bitwarden_license
            gulp: true
          - name: Identity
            base_path: .
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Print Environment
        run: |
          dotnet --info
          node --version
          npm --version
          gulp --version

      - name: load env vars
        run: |
          echo "Base Path: ${BASE_PATH}"
          echo "Name: ${NAME}"
        env:
          BASE_PATH: ${{ matrix.base_path }}
          NAME: ${{ matrix.name }}

      - name: Build Service
        run: |
          work_dir=$(pwd)
          dir=$BASE_PATH/src/$SERVICE_NAME

          cd $dir
          echo "Restore"
          dotnet restore $SERVICE_NAME.csproj
          echo "Clean"
          dotnet clean $SERVICE_NAME.csproj -c "Release" -o obj/Azure/publish

          if [ "$GULP" == "true" ]; then
            npm install
            npm install gulp
            gulp --gulpfile gulpfile.js build
          fi

          echo "Publish"
          dotnet publish $SERVICE_NAME.csproj -c "Release" -o obj/Azure/publish

          cd obj/Azure/publish
          zip -r $SERVICE_NAME.zip .
          mv $SERVICE_NAME.zip ../../../
        env:
          SERVICE_NAME: ${{ matrix.name }}
          BASE_PATH: ${{ matrix.base_path }}
          GULP: ${{ matrix.gulp }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: ${{ env.SERVICE_NAME }}.zip
          path: ${{ env.BASE_PATH }}/src/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}.zip
        env:
          BASE_PATH: ${{ matrix.base_path }}
          SERVICE_NAME: ${{ matrix.name }}

      - name: Test build dir
        run: ls $BASE_PATH/src/$SERVICE_NAME
        env:
          SERVICE_NAME: ${{ matrix.name }}
          BASE_PATH: ${{ matrix.base_path }}

  deploy-identity:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Identity.zip

      - name: Deploy Identity
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.IDENTITY_WEBAPP_NAME }} 
          slot-name: ${{ secrets.IDENTITY_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.IDENTITY_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Identity.zip

  deploy-api:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Api.zip

      - name: Deploy Api 
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.API_WEBAPP_NAME }} 
          slot-name: ${{ secrets.API_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.API_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Api.zip

  deploy-billing:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Billing.zip

      - name: Deploy Billing
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.BILLING_WEBAPP_NAME }} 
          slot-name: ${{ secrets.BILLING_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.BILLING_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Billing.zip

  deploy-events:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Events.zip

      - name: Deploy Events
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.EVENTS_WEBAPP_NAME }} 
          slot-name: ${{ secrets.EVENTS_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.EVENTS_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Events.zip

  deploy-sso:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Sso.zip

      - name: Deploy Sso
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.SSO_WEBAPP_NAME }} 
          slot-name: ${{ secrets.SSO_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.SSO_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Sso.zip

  deploy-portal:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Portal.zip

      - name: Deploy Portal
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.PORTAL_WEBAPP_NAME }} 
          slot-name: ${{ secrets.PORTAL_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.PORTAL_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Portal.zip

  deploy-admin:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
      - name: Download aritifacts
        uses: actions/download-artifact@v2
        with:
          name: Admin.zip

      - name: Deploy Admin
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.ADMIN_WEBAPP_NAME }} 
          slot-name: ${{ secrets.ADMIN_WEBAPP_SLOTNAME }}
          publish-profile: ${{ secrets.ADMIN_WEBAPP_PUBLISH_PROFILE  }} 
          package: ./Admin.zip
