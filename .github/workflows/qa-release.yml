name: QA Deploy

on:
  push:
    branches:
      - 'master' # only for testing. Needs to be removed before PR
      - 'rc'
  workflow_dispatch:
    inputs: {}

jobs:
  deploy-qa:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Api
            base_path: .
          #- name: Admin
          #  base_path: .
          #  gulp: true
          #- name: Billing
          #  base_path: .
          #- name: Events
          #  base_path: .
          #- name: Notifications
          #  base_path: .
          #- name: Sso
          #  base_path: ./bitwarden_license
          #  gulp: true
          #- name: Portal
          #  base_path: ./bitwarden_license
          #  gulp: true
          #- name: Identity
          #  base_path: .
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Print Environment
        run: |
          dotnet --info
          node --version
          npm --version
          gulp --version

      - name: load env vars
        run: |
          echo "Base Path: ${BASE_PATH}"
          echo "Name: ${NAME}"
        env:
          BASE_PATH: ${{ matrix.base_path }}
          NAME: ${{ matrix.name }}

      - name: Build Service
        run: |
          work_dir=$(pwd)
          dir=$BASE_PATH/src/$SERVICE_NAME

          cd $dir
          echo "Restore"
          dotnet restore $SERVICE_NAME.csproj
          echo "Clean"
          dotnet clean $SERVICE_NAME.csproj -c "Release" -o obj/Azure/publish

          if [ "$GULP" == "true" ]; then
            npm install
            npm install gulp
            gulp --gulpfile gulpfile.js build
          fi

          echo "Publish"
          dotnet publish $SERVICE_NAME.csproj -c "Release" -o obj/Azure/publish

          zip -r $SERVICE_NAME.zip obj/Azure/publish
        env:
          SERVICE_NAME: ${{ matrix.name }}
          BASE_PATH: ${{ matrix.base_path }}
          GULP: ${{ matrix.gulp }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: $SERVICE_NAME.zip
          path: ./$SERVICE_NAME.zip
        env:
          SERVICE_NAME: ${{ matrix.name }}

      - name: Test build dir
        run: ls $BASE_PATH/src/$SERVICE_NAME
        env:
          SERVICE_NAME: ${{ matrix.name }}

      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with:
          app-name: $SERVICE_NAME # Replace with your app name
          slot-name: ${{ secrets.API_WEBAPP_NAME }}
          publish-profile: ${{ secrets.API_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: $BASE_PATH/src/$SERVICE_NAME/$SERVICE_NAME.zip
        env:
          SERVICE_NAME: ${{ matrix.name }}
          BASE_PATH: ${{ matrix.base_path }}
